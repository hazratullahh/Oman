// src/app/[lang]/layout.js
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Footer from "@/app/components/Footer";
import { NavbarItem } from "@/app/components/NavbarItem";
import { TopHeader } from "@/app/components/TopHeader";
// Make sure this import path is correct and uses "i18n", not "18n"
import { getDictionary } from "@/lib/i18n";
import { dir } from "i18next";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export async function generateMetadata({ params }) {
  // Await params here for metadata generation
  const resolvedParams = await params;
  const dictionary = await getDictionary(resolvedParams.lang);

  return {
    title: dictionary.home_title || "Create Next App",
    description: dictionary.home_description || "Generated by create next app",
    openGraph: {
      title: dictionary.open_graph_title,
      description: dictionary.open_graph_description,
      url: "https://yourdomain.com/",
      siteName: "YourBrand",
      images: [
        {
          url: "https://yourdomain.com/og-image.jpg",
          width: 1200,
          height: 630,
          alt: dictionary.open_graph_title,
        },
      ],
      locale: resolvedParams.lang === "ar" ? "ar_AR" : "en_US",
      type: "website",
    },
    twitter: {
      card: "summary_large_image",
      title: dictionary.twitter_title,
      description: dictionary.twitter_description,
      images: ["https://yourdomain.com/twitter-image.jpg"],
    },
  };
}

export default async function RootLayout({ children, params }) {
  // Await params here for the RootLayout component as well
  const resolvedParams = await params; // <-- This is the crucial line to add/ensure is there

  const dictionary = await getDictionary(resolvedParams.lang); // Use resolvedParams.lang here

  return (
    // Use resolvedParams.lang for the html tag's lang and dir attributes
    <html lang={resolvedParams.lang} dir={dir(resolvedParams.lang)}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Pass resolvedParams.lang to components */}
        <TopHeader
          dictionary={dictionary}
          currentLocale={resolvedParams.lang}
        />
        <NavbarItem
          dictionary={dictionary}
          currentLocale={resolvedParams.lang}
        />
        {children}
        <Footer dictionary={dictionary} currentLocale={resolvedParams.lang} />
      </body>
    </html>
  );
}
